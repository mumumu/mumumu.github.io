<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: selenium | mumumu の日記]]></title>
  <link href="http://mumumu.github.io/blog/categories/selenium/atom.xml" rel="self"/>
  <link href="http://mumumu.github.io/"/>
  <updated>2022-02-11T21:21:09+09:00</updated>
  <id>http://mumumu.github.io/</id>
  <author>
    <name><![CDATA[mumumu(Yoshinari Takaoka)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Firefox profile setting on Selenium]]></title>
    <link href="http://mumumu.github.io/blog/2013/05/30/firefox-profile-setting-on-selenium/"/>
    <updated>2013-05-30T21:02:00+09:00</updated>
    <id>http://mumumu.github.io/blog/2013/05/30/firefox-profile-setting-on-selenium</id>
    <content type="html"><![CDATA[<p><a href="http://stackoverflow.com/questions/2405714/selenium-and-https-ssl">http://stackoverflow.com/questions/2405714/selenium-and-https-ssl</a></p>

<p><a href="http://docs.seleniumhq.org/">Selenium</a> を最近テストに愛用している。ただ、https な通信のときにオレオレ証明書を使っている場合、毎回ブラウザが立ち上がるたびに以下のような警告が出て非常にうざいのが問題だった。「危険性を理解した上で接続する」をクリックして例外サイトに加えても結果は同じだったので、これはプロファイルが適用されていないんだな、と気付いた。</p>

<p><img src="images/firefox_ssl_warning.png" alt="firefox ssl warning" /></p>

<p>自分は Selenium Server を以下のような Java のコードで起動し、Firefox をコントロールしていた。これにプロファイルを適用すれば良いことになる。</p>

<pre><code>protected SeleniumServer seleniumServer;
protected Selenium selenium;

protected void setUp() throws Exception { 

    String testUrl = "http://example.com/foo/bar";
    String testBrowser = "*firefox";

    seleniumServer = new SeleniumServer();
    seleniumServer.start();

    selenium = new DefaultSelenium(
            "localhost", seleniumServer.getPort(),
            testBrowser, testUrl
           );
    selenium.start();

}
</code></pre>

<p>上記はコマンドラインで Selenium Server を起動せずに Java から起動しているので、Java からプロファイル設定を渡す方法ってなんだろうと思っていろいろ調べた。だが、コマンドラインから Selenium Server を起動した場合とごっちゃになっていて結論がよくわからなかった。結局以下のように SeleniumServer のコンストラクタに RemoteControlConfiguration オブジェクトを渡せばうまくいった。</p>

<pre><code>RemoteControlConfiguration rcc = new RemoteControlConfiguration();
rcc.setFirefoxProfileTemplate(new File("/path/to/firefox_profile_dir"));
seleniumServer = new SeleniumServer(rcc);
</code></pre>

<p>Firefox のプロファイルのディレクトリはプラットフォームによって異なる。Windows であれば、%AppData%/Roaming/Mozilla/Firefox/Profiles/xxxxxxxxxx となる。</p>

<p>これでプロファイルを Selenium Server に渡せるようになったのはいいのだが、Firefox の起動が極めて重かったので参った。プロファイルを渡さなかったときは重くなかったので、別に空のプロファイルを作り、そのプロファイルにオレオレ証明書を受け入れさせたら軽くなった。 Firefox で新しいプロファイルを作るには、以下のコマンドを使う。</p>

<pre><code>firefox -P
</code></pre>

<p>そうすれば以下のようなウィンドウが起動するので、プロファイルを設定し、Java 側で新たに指定すればよい。</p>

<p><img src="images/firefox_profile_window.png" alt="firefox profile window" /></p>

<p>Selenium Server をコマンドラインから起動する場合は、以下のやり方でプロファイルを渡すことが出来る。このやり方なら、 Java 側で SeleniumServerクラスをインスタンス化して start する必要はない。</p>

<pre><code>java -jar selenium-server-standalone-2.31.0.jar -firefoxProfileTemplate /path/to/firefox_profile_dir
</code></pre>

<p>ヤレヤレ。少し面倒だが、だいぶ楽になった(´ー｀; )</p>
]]></content>
  </entry>
  
</feed>
